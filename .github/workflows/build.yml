name: Automatticly build wheel if version changes
on:
    push:
        branches:
            - "main"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.7"
                  architecture: "x64"
            - uses: dorny/paths-filter@v2
              id: new
              with:
                  filters: |
                      init:
                        - 'backup/__init__.py'
            # - if: steps.new.outputs.init == 'true'
            #   run: pip install wheel
            # - if: steps.new.outputs.init == 'true'
            #   run: python setup.py bdist_wheel --python-tag py3
            - id: version
              run: |
                  version=$(python -c "import backup; print(backup.VERSION)")
                  echo "::set-output name=VERSION::$version"
            # - name: "Build Changelog"
            #   id: build_changelog
            #   uses: mikepenz/release-changelog-builder-action@v2
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - if: steps.new.outputs.init == 'true'
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  automatic_release_tag: "${{ steps.version.outputs.VERSION }}"
                  prerelease: false
                  # files: |
                  #     ./dist/*.whl
            - if: steps.new.outputs.init == 'true'
              id: release
              uses: cardinalby/git-get-release-action@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  tag: '${{ steps.version.outputs.VERSION }}'
            - if: steps.new.outputs.init == 'true'
              uses: irongut/EditRelease@v1.2.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  id: ${{ steps.release.outputs.id }}
                  body: "## Installation command\n`pipx install https://github.com/PaddeCraft/BackUpUtility/archive/refs/tags/${{ steps.version.outputs.VERSION }}.zip`"
